{"ast":null,"code":"var _jsxFileName = \"/home/mido/cs/csproj/a5/city-search/src/components/Display.js\";\nimport React, { Component } from 'react';\nimport ZipItem from './ZipItem';\nimport ZipColumn from './ZipColumn';\nimport ZipRow from './ZipRow';\nimport './Display.css';\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderZip = () => {\n      var items = this.props.arr.map(function (item, i) {\n        return /*#__PURE__*/React.createElement(ZipItem, {\n          loc: item[0],\n          long: item[1],\n          lat: item[2],\n          pop: item[3],\n          index: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 7\n          }\n        });\n      });\n      return items;\n    };\n\n    this.renderCity = () => {\n      let hold = [];\n      let length = this.props.arr.length;\n      let numCols = Math.ceil(length / 40); //collect the columns first\n\n      let items = [this.getCols(numCols)];\n      items = items.concat(this.props.arr.map(function (item, i) {\n        let itemsInner = [];\n\n        while (i < length) {\n          if (i % 40 === 0 || i === length - 1) {\n            itemsInner.push(this.getRow(this.props.arr));\n            hold = [];\n            break;\n          }\n\n          hold.push(this.getRow(this.props.arr));\n        }\n\n        return itemsInner;\n      }));\n      return items;\n    };\n\n    this.getCols = val => {\n      return /*#__PURE__*/React.createElement(ZipColumn, {\n        count: val,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.getRow = arr => {\n      return /*#__PURE__*/React.createElement(ZipRow, {\n        arr: arr,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.state = {\n      rend: {\n        'zip': this.renderZip,\n        'city': this.renderCity\n      }\n    };\n  }\n\n  render() {\n    let items = this.state.rend[this.props.field]();\n    console.log(\"The field: \", this.props.field);\n    console.log(\"Items: \", items);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DISPLAY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }\n    }, items);\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/home/mido/cs/csproj/a5/city-search/src/components/Display.js"],"names":["React","Component","ZipItem","ZipColumn","ZipRow","Display","constructor","props","renderZip","items","arr","map","item","i","renderCity","hold","length","numCols","Math","ceil","getCols","concat","itemsInner","push","getRow","val","state","rend","render","field","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ZipItem from './ZipItem';\nimport ZipColumn from './ZipColumn';\nimport ZipRow from './ZipRow';\nimport './Display.css';\n\nclass Display extends Component {\n    constructor(props){\n\tsuper(props);\n\tthis.state = {\n\t    rend: {\n\t\t   'zip':this.renderZip,\n\t\t   'city':this.renderCity\n\t\t  }\n\t};\n    }\n\n    renderZip = () => {\n\tvar items = this.props.arr.map(function(item, i) {\n\t    return (\n\t\t    <ZipItem loc={item[0]} long={item[1]} lat={item[2]} pop={item[3]} index={i}/>\n\t    );});\n\treturn items;\n    }\n\n    renderCity = () => {\n\tlet hold = [];\n\tlet length = this.props.arr.length;\n\tlet numCols = Math.ceil(length / 40);\n\n\t//collect the columns first\n\tlet items = [this.getCols(numCols)];\n\t\n\titems = items.concat(this.props.arr.map(function (item, i) {   \n\t    let itemsInner = [];\n\t    while (i < length) {\n\t\tif(i%40 === 0 || i === length-1) {\n\t\t    itemsInner.push(this.getRow(this.props.arr));\n\t\t    hold = [];\n\t\t    break;\n\t\t}\n\t\thold.push(this.getRow(this.props.arr));\n\t    }\n\t    \n\t    return itemsInner;\n\t}));\n\t\n\treturn items;\t\n    }\n\n\n    getCols = (val)=> {\n\treturn <ZipColumn count={val}/>;\n    }\n\n    getRow = (arr) => {\n\treturn <ZipRow arr={arr} />;\n    }\n    \n    render() {\n\tlet items = this.state.rend[this.props.field]();\n\tconsole.log(\"The field: \", this.props.field);\n\tconsole.log(\"Items: \", items);\n\treturn (\n\t    <div className=\"DISPLAY\">\n\t      {items}\n\t    </div>\n\t);\n    };\n}\n\nexport default Display;\n\n\n"]},"metadata":{},"sourceType":"module"}