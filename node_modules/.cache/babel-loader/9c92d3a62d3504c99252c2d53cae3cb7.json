{"ast":null,"code":"var _jsxFileName = \"/home/mido/cs/csproj/a5/city-search/src/components/ZipTable.js\";\nimport React, { Component } from 'react';\nimport ZipColumn from './ZipColumn';\nimport ZipRow from './ZipRow';\n\nclass ZipTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.genTable = () => {\n      let hold = [];\n      let length = this.props.arr.length;\n      let numCols = Math.ceil(length / 40);\n      let count = 0;\n      let items = [];\n      let itemsInner = [];\n\n      if (length === 0) {\n        console.log(\"empty array\");\n        return [];\n      } //collect the columns first\n\n\n      items.push(this.getCols(numCols));\n\n      for (; count < length; count++) {}\n\n      items = items.concat(this.props.arr.map((item, i) => {\n        let itemsInner = [];\n\n        while (i < length) {\n          if (i !== 0 && i % 40 === 0 || i === length - 1) {\n            itemsInner.push(this.getRow(this.props.arr));\n            hold = [];\n            break;\n          }\n\n          hold.push(this.getRow(this.props.arr, numCols, i));\n        }\n\n        return itemsInner;\n      }));\n      return items;\n    };\n\n    this.getCols = val => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ZipColumn, {\n        count: val,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }\n      }));\n    };\n\n    this.getRow = (arr, numCols, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(ZipRow, {\n        arr: arr,\n        numCols: numCols,\n        stIndex: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 3\n        }\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }, this.genTable());\n  }\n\n}\n\nexport default ZipTable;","map":{"version":3,"sources":["/home/mido/cs/csproj/a5/city-search/src/components/ZipTable.js"],"names":["React","Component","ZipColumn","ZipRow","ZipTable","genTable","hold","length","props","arr","numCols","Math","ceil","count","items","itemsInner","console","log","push","getCols","concat","map","item","i","getRow","val","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAE7BI,QAF6B,GAElB,MAAK;AACnB,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeF,MAA5B;AACA,UAAIG,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUL,MAAM,GAAG,EAAnB,CAAd;AACA,UAAIM,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAEA,UAAGR,MAAM,KAAK,CAAd,EAAgB;AACZS,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,eAAO,EAAP;AACH,OAXkB,CAanB;;;AACAH,MAAAA,KAAK,CAACI,IAAN,CAAW,KAAKC,OAAL,CAAaT,OAAb,CAAX;;AAEA,aAAMG,KAAK,GAAGN,MAAd,EAAsBM,KAAK,EAA3B,EAA+B,CAE9B;;AAEDC,MAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAa,KAAKZ,KAAL,CAAWC,GAAX,CAAeY,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACjD,YAAIR,UAAU,GAAG,EAAjB;;AACA,eAAOQ,CAAC,GAAGhB,MAAX,EAAmB;AACtB,cAAIgB,CAAC,KAAG,CAAJ,IAASA,CAAC,GAAC,EAAF,KAAS,CAAnB,IAAyBA,CAAC,KAAKhB,MAAM,GAAC,CAAzC,EAA4C;AACxCQ,YAAAA,UAAU,CAACG,IAAX,CAAgB,KAAKM,MAAL,CAAY,KAAKhB,KAAL,CAAWC,GAAvB,CAAhB;AACAH,YAAAA,IAAI,GAAG,EAAP;AACA;AACH;;AACDA,UAAAA,IAAI,CAACY,IAAL,CAAU,KAAKM,MAAL,CAAY,KAAKhB,KAAL,CAAWC,GAAvB,EAA4BC,OAA5B,EAAqCa,CAArC,CAAV;AACI;;AAED,eAAOR,UAAP;AACH,OAZoB,CAAb,CAAR;AAcA,aAAOD,KAAP;AACI,KArC4B;;AAAA,SAuC7BK,OAvC6B,GAuClBM,GAAD,IAAQ;AACrB,0BAAQ,uDAAE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAF,CAAR;AACI,KAzC4B;;AAAA,SA2C7BD,MA3C6B,GA2CpB,CAACf,GAAD,EAAMC,OAAN,EAAea,CAAf,KAAqB;AACjC,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEd,GAAb;AAAkB,QAAA,OAAO,EAAEC,OAA3B;AAAoC,QAAA,OAAO,EAAEa,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CADJ;AAKI,KAjD4B;AAAA;;AAmD7BG,EAAAA,MAAM,GAAE;AACX,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAKrB,QAAL,EADE,CADJ;AAKI;;AAzD4B;;AA4DjC,eAAeD,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport ZipColumn from './ZipColumn';\nimport ZipRow from './ZipRow';\n\nclass ZipTable extends Component {\n\n    genTable = ()=> {\n\tlet hold = [];\n\tlet length = this.props.arr.length;\n\tlet numCols = Math.ceil(length / 40);\n\tlet count = 0;\n\tlet items = [];\n\tlet itemsInner = [];\n\t\n\tif(length === 0){\n\t    console.log(\"empty array\");\n\t    return [];\n\t}\n\t\n\t//collect the columns first\n\titems.push(this.getCols(numCols));\n\n\tfor (;count < length; count++) {\n\t    \n\t}\n\t    \n\titems = items.concat(this.props.arr.map((item, i) => {   \n\t    let itemsInner = [];\n\t    while (i < length) {\n\t\tif((i!==0 && i%40 === 0) || i === length-1) {\n\t\t    itemsInner.push(this.getRow(this.props.arr));\n\t\t    hold = [];\n\t\t    break;\n\t\t}\n\t\thold.push(this.getRow(this.props.arr, numCols, i));\n\t    }\n\t    \n\t    return itemsInner;\n\t}));\n\t\n\treturn items;\n    }\n\n    getCols = (val)=> {\n\treturn (<><ZipColumn count={val}/></>);\n    }\n\n    getRow = (arr, numCols, i) => {\n\treturn (\n\t    <tr>\n\t\t<ZipRow arr={arr} numCols={numCols} stIndex={i} />\n\t    </tr>\n\t);\n    }\n\n    render(){\n\treturn(\n\t    <table>\n\t\t{this.genTable()}\n\t    </table>\n\t);\n    }\n}\n\nexport default ZipTable;\n"]},"metadata":{},"sourceType":"module"}